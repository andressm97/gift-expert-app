{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","prototype","PropTypes","func","isRequired","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAc,SAAdA,EAAe,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OALAJ,EAAYK,UAAU,CAClBJ,cAAcK,IAAUC,KAAKC,YAK7B,uBAAMC,SAjBS,SAACC,GAChBA,EAAEC,iBAECR,EAAWS,OAAOC,OAAO,IACxBZ,GAAc,SAACa,GAAD,OAASX,GAAT,mBAAuBW,OACrCV,EAAc,MAYlB,UACI,8CACA,uBACIW,KAAK,OACLC,MAAOb,EACPc,SA1BY,SAACP,GACrBN,EAAcM,EAAEQ,OAAOF,c,+BCNdG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEmCC,UAAUH,GAF7C,+DAGCI,MAAMF,GAHP,cAGXG,EAHW,gBAIGA,EAAKC,OAJR,uBAIVC,EAJU,EAIVA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,UAAUZ,QATjB,kBAaVM,GAbU,4CAAD,sDCCXO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC+BDO,EAhCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAId,ECNsB,SAACA,GAEvB,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGtB,CAACpB,IAEIqB,EDXqBI,CAAazB,GAA7Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAMnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAS,mBAAGJ,UAAU,wCAAb,yBACN,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEKxBe,EAzBK,WAEhB,MAAoC5C,mBAAS,CAAC,YAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAGA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWlB,KAAI,SAACT,GACZ,OAAQ,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCblC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.13bf3563.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const HandleInputChange=(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    const HandleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories((cats)=>[inputValue,...cats] )\r\n            setInputValue('')\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    AddCategory.prototype={\r\n        setCategories:PropTypes.func.isRequired\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={HandleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={HandleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","\r\n    export const getGifs=async(category)=>{\r\n\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uRcBvm8MnLO1CR6W7w2q9BjkWLmPpwgb`;\r\n        const resp= await fetch(url);\r\n        const {data}= await resp.json();\r\n        const gifs =data.map(img =>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized.url\r\n            }\r\n        })\r\n         \r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n  \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading&&<p className=\"card animate__animated animate__flash\">cargando...</p>}\r\n                <div className=\"card-grid\">\r\n                  {\r\n                      images.map((img)=>(\r\n                          <GifGridItem \r\n                              key={img.id}\r\n                              {...img} />\r\n                      ) )\r\n                  }\r\n                 </div>\r\n\r\n            \r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img=>{\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n            })\r\n    },[category])\r\n\r\n    return state; \r\n}","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport GifGrid from \"./components/GifGrid\"\r\n\r\nconst GifExpertApp= ()=>{\r\n\r\n    const [categories, setCategories] = useState(['primera'])\r\n  \r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        {/* <button >Agregar</button> */}\r\n        <ol>\r\n            {\r\n                categories.map((category)=>{\r\n                    return (<GifGrid \r\n                             key={category}\r\n                             category={category}/>)\r\n                })\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}